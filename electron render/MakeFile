# Variables
PYTHON = python
PYINSTALLER = pyinstaller
PIP = pip
NPM = npm
DIST_DIR = ..

# Build statement

env:
	@echo Creating virtual environment
	cd backend && if not exist Gomoku-env ($(PYTHON) -m venv Gomoku-env)
	backend\Gomoku-env\Scripts\activate
	python.exe -m pip install --upgrade pip

build-backend: env
	@echo Installing backend dependencies
	$(PIP) install -r backend/requirements.txt
	cd backend && $(PYINSTALLER) --onefile --distpath $(DIST_DIR) --name Gomoku --add-data "render_dist:render_dist" --add-data "./server.py:." --add-data "api:api" --add-data "srcs:srcs" --hidden-import=numpy server.py

build-frontend:
	@echo Installing frontend dependencies
	cd render && $(NPM) install
	cd render && $(NPM) run build
	@echo Copying dist folder to backend/render_dist
ifeq ($(OS),Windows_NT)
	xcopy /E /I /Y render\dist backend\render_dist
else
	cp -rf render/dist backend/render_dist
endif

build: build-frontend build-backend
	@echo Building frontend and backend complited

# Start statement
start: build
	./Gomoku.exe
#	$(PYTHON) main.py
#	$(NPM) start

# Clean statement
clean:
	find . -type f -name '*.pyc' -delete
	find . -type d -name '__pycache__' -exec rm -r {} +
	rm -rf node_modules

# Full clean statement
fclean: clean
	rm -rf venv

# Rebuild statement
re: fclean build

# Phony targets
.PHONY: build start clean fclean re